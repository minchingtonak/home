{"version":3,"sources":["LinkSections.tsx","config.ts","SearchBar.tsx","Clock.tsx","StaticLinks.tsx","HomeSearch.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Section","title","children","length","id","className","LinkSections","query","setAction","useState","sites","setSites","sections","setSections","selected","setSelected","totalMatched","setTotalMatched","useEffect","fetch","then","res","json","data","document","documentElement","style","setProperty","Math","max","Object","keys","map","category","catch","err","console","error","validator","isURL","match","newSections","newSelected","pos","matches","forEach","idx","links","filtered","filter","name","toLowerCase","includes","push","isSelected","href","onKeyDown","e","key","section","props","child","addEventListener","removeEventListener","SearchBar","text","setText","action","updateTitle","useCallback","start","blurCallback","bind","focusCallback","window","onSubmit","preventDefault","location","assign","type","value","autoFocus","autoComplete","onChange","target","Clock","Date","date","setDate","timer","setInterval","clearInterval","d","pad","time","getHours","getMinutes","getSeconds","to24hour","StaticLinks","link","HomeSearch","setQuery","useResizeDetector","spanHeight","height","ref","display","App","min","floor","random","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.86e1d359.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport validator from 'validator';\nimport { json, option, SITES_DATA_URL } from './config';\n\nfunction Section({\n  title,\n  children,\n}: {\n  title: string;\n  children: JSX.Element[];\n}) {\n  return children.length ? (\n    <div id={title} className={'section'}>\n      {title}\n      <div>{children}</div>\n    </div>\n  ) : (\n    <></>\n  );\n}\n\nexport default function LinkSections({\n  query,\n  setAction,\n}: {\n  query: string;\n  setAction: (s: option<string>) => void;\n}) {\n  const [sites, setSites] = useState<option<json>>(null);\n  const [sections, setSections] = useState<JSX.Element[]>([]);\n  const [selected, setSelected] = useState<option<number>>(null);\n  const [totalMatched, setTotalMatched] = useState(0);\n\n  useEffect(() => {\n    fetch(SITES_DATA_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        setSites(data);\n        document.documentElement.style.setProperty(\n          '--max-links',\n          `${Math.max(\n            ...Object.keys(data).map(\n              (category) => Object.keys(data[category]).length,\n            ),\n          )}`,\n        );\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  useEffect(() => {\n    if (validator.isURL(query)) {\n      setAction(query);\n      return;\n    }\n    if (\n      query.match(/^lh\\d{3,5}$/) !== null ||\n      query.match(/^localhost:\\d{3,5}$/) !== null\n    ) {\n      setAction(\n        `http://localhost:${(query.match(/\\d{3,5}/) as RegExpMatchArray)[0]}`,\n      );\n      return;\n    }\n    if (sites === null) return;\n    // Assemble list of sections based on query\n    const newSections: JSX.Element[] = [];\n    const newSelected: option<number> = query.length ? 0 : null;\n    let pos = 0,\n      matches = false;\n    Object.keys(sites).forEach((category, idx) => {\n      const links = sites[category];\n      const filtered = Object.keys(links).filter((name) =>\n        name.toLowerCase().includes(query),\n      );\n\n      if (filtered.length) {\n        matches = true;\n        newSections.push(\n          <Section key={idx} title={category}>\n            {filtered.map((name, idx) => {\n              const isSelected = pos++ === newSelected;\n              if (isSelected) setAction(links[name]);\n\n              return (\n                <a\n                  key={idx}\n                  href={links[name]}\n                  className={isSelected ? 'selected' : ''}\n                >\n                  {name}\n                </a>\n              );\n            })}\n          </Section>,\n        );\n      }\n    });\n    setTotalMatched(pos);\n    setSections(newSections);\n    setSelected(newSelected);\n    if (!matches || !query.length) setAction(null);\n  }, [sites, query, setAction]);\n\n  useEffect(() => {\n    function onKeyDown(e: KeyboardEvent) {\n      let newSelected = selected;\n      if (e.key === 'ArrowUp' || e.key === 'ArrowLeft') {\n        if (selected !== null && selected > 0) newSelected = selected - 1;\n      } else if (e.key === 'ArrowDown' || e.key === 'ArrowRight') {\n        if (selected !== null && selected < totalMatched)\n          newSelected = selected + 1;\n      }\n      if (newSelected === selected) return;\n      // update current sections to set new selected classname to selected\n      let pos = 0;\n      setSections(\n        sections.map((section, idx) => (\n          <Section key={idx} title={section.props.title}>\n            {'children' in section.props ? (\n              section.props.children.map((child: JSX.Element, idx: number) => {\n                const isSelected = pos++ === newSelected;\n                if (isSelected) setAction(child.props.href);\n\n                return (\n                  <a\n                    key={idx}\n                    href={child.props.href}\n                    className={isSelected ? 'selected' : ''}\n                  >\n                    {child.props.children}\n                  </a>\n                );\n              })\n            ) : (\n              <></>\n            )}\n          </Section>\n        )),\n      );\n      setSelected(newSelected);\n    }\n    document.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [setAction, selected, totalMatched, sections]);\n\n  return <div id={'links'}>{sections}</div>;\n}\n","export const PAGE_HUE_MIN = 10;\nexport const PAGE_HUE_MAX = 360;\n\nexport const DEFAULT_TAB_TITLE = '🏠 Home';\nexport const SEARCH_TAB_PREFIX = '🔍';\nexport const NOTE_TAB_PREFIX = '📝';\n\nexport const DEFAULT_SEARCH_URL = 'https://google.com/search';\n\nexport const SITES_DATA_URL =\n  'https://gist.githubusercontent.com/minchingtonak/b60356be980dc4f430fe73b523d1fafb/raw';\n\nexport type option<T> = T | null;\nexport type json = { [k: string]: { [k: string]: string } };\n","import { useCallback, useEffect } from 'react';\nimport {\n  DEFAULT_SEARCH_URL,\n  DEFAULT_TAB_TITLE,\n  NOTE_TAB_PREFIX,\n  option,\n  SEARCH_TAB_PREFIX,\n} from './config';\n\nexport default function SearchBar({\n  text,\n  setText,\n  action,\n}: {\n  text: string;\n  setText: (s: string) => void;\n  action: option<string>;\n}) {\n  const updateTitle = useCallback(\n    (start: string) => {\n      if (text.length) document.title = `${start} - ${text}`;\n      else document.title = DEFAULT_TAB_TITLE;\n    },\n    [text],\n  );\n\n  useEffect(() => {\n    updateTitle(SEARCH_TAB_PREFIX);\n  }, [text, updateTitle]);\n\n  useEffect(() => {\n    const blurCallback = updateTitle.bind(null, NOTE_TAB_PREFIX),\n      focusCallback = updateTitle.bind(null, SEARCH_TAB_PREFIX);\n\n    window.addEventListener('blur', blurCallback);\n    window.addEventListener('focus', focusCallback);\n\n    return () => {\n      window.removeEventListener('blur', blurCallback);\n      window.removeEventListener('focus', focusCallback);\n    };\n  }, [updateTitle]);\n\n  return (\n    <form\n      id={'action'}\n      onSubmit={(e) => {\n        e.preventDefault();\n        // TODO - code to handle todo list commands\n        window.location.assign(\n          action !== null ? action : `${DEFAULT_SEARCH_URL}?q=${text}`,\n        );\n      }}\n    >\n      <input\n        type=\"text\"\n        value={text}\n        autoFocus\n        autoComplete={'off'}\n        onChange={(e) => setText(e.target.value)}\n      />\n    </form>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport default function Clock() {\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  function to24hour(d: Date): string {\n    function pad(time: number) {\n      return time < 10 ? `0${time}` : time;\n    }\n\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\n  }\n\n  return <span id={'clock'}>{to24hour(date)}</span>;\n}\n","import Clock from './Clock';\n\nfunction StaticLinks() {\n  const links = ['Spotify', 'Slack', 'Steam'];\n\n  return (\n    <div id={'static-links'}>\n      <Clock />\n      {links.map((link, idx) => (\n        <a key={idx} href={link.toLowerCase() + ':'}>\n          {link}\n        </a>\n      ))}\n    </div>\n  );\n}\n\nexport default StaticLinks;\n","import { useState } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { option } from './config';\nimport LinkSections from './LinkSections';\nimport SearchBar from './SearchBar';\nimport StaticLinks from './StaticLinks';\n\nexport default function HomeSearch() {\n  const [query, setQuery] = useState('');\n  const [action, setAction] = useState<option<string>>(null);\n  const { height: spanHeight, ref } = useResizeDetector();\n\n  return (\n    //  We explicitly set the height of div#main so\n    //  the height transition is animated\n    <div id={'main'} style={{ height: spanHeight }}>\n      <span ref={ref} style={{ display: 'block' }}>\n        <StaticLinks />\n        <SearchBar text={query} setText={setQuery} action={action} />\n        <LinkSections query={query} setAction={setAction} />\n      </span>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport HomeSearch from './HomeSearch';\nimport { PAGE_HUE_MAX, PAGE_HUE_MIN } from './config';\n\nexport default function App() {\n  useEffect(() => {\n    function random(min: number, max: number): number {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    // Choose a random page color scheme on page load\n    document.documentElement.style.setProperty(\n      '--base',\n      `${random(PAGE_HUE_MIN, PAGE_HUE_MAX)}`,\n    );\n  }, []);\n\n  return <HomeSearch />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\nimport { register } from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nregister();\n"],"sourceRoot":""}