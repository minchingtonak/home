{"version":3,"sources":["LinkSections.tsx","SearchBar.tsx","config.ts","Clock.tsx","StaticLinks.tsx","HomeSearch.tsx","App.tsx","index.tsx"],"names":["Section","title","children","length","id","className","LinkSections","query","setAction","useState","sites","setSites","sections","setSections","selected","setSelected","totalMatched","setTotalMatched","useEffect","fetch","then","res","json","data","catch","err","console","error","validator","isURL","match","newSections","newSelected","pos","matches","Object","keys","forEach","category","idx","links","filtered","filter","name","toLowerCase","includes","push","map","isSelected","href","onKeyDown","e","key","section","props","child","document","addEventListener","removeEventListener","SearchBar","text","setText","action","updateTitle","useCallback","start","blurCallback","bind","focusCallback","window","onSubmit","preventDefault","location","assign","type","value","autoFocus","autoComplete","onChange","target","Clock","Date","date","setDate","timer","setInterval","clearInterval","d","pad","time","getHours","getMinutes","getSeconds","to24hour","StaticLinks","link","HomeSearch","setQuery","useResizeDetector","spanHeight","height","ref","style","display","App","min","max","documentElement","setProperty","Math","floor","random","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dcdad19c.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport validator from 'validator';\nimport { json, option } from './config';\n\nfunction Section({\n  title,\n  children,\n}: {\n  title: string;\n  children: JSX.Element[];\n}) {\n  return children.length ? (\n    <div id={title} className={'section'}>\n      {title}\n      <div>{children}</div>\n    </div>\n  ) : (\n    <></>\n  );\n}\n\nexport default function LinkSections({\n  query,\n  setAction,\n}: {\n  query: string;\n  setAction: (s: option<string>) => void;\n}) {\n  const [sites, setSites] = useState<option<json>>(null);\n  const [sections, setSections] = useState<JSX.Element[]>([]);\n  const [selected, setSelected] = useState<option<number>>(null);\n  const [totalMatched, setTotalMatched] = useState(0);\n\n  useEffect(() => {\n    fetch(\n      'https://gist.githubusercontent.com/minchingtonak/b60356be980dc4f430fe73b523d1fafb/raw',\n    )\n      .then((res) => res.json())\n      .then((data) => setSites(data))\n      .catch((err) => console.error(err));\n  }, []);\n\n  useEffect(() => {\n    if (validator.isURL(query)) {\n      setAction(query);\n      return;\n    }\n    if (\n      query.match(/^lh\\d{3,5}$/) !== null ||\n      query.match(/^localhost:\\d{3,5}$/) !== null\n    ) {\n      setAction(\n        `http://localhost:${(query.match(/\\d{3,5}/) as RegExpMatchArray)[0]}`,\n      );\n      return;\n    }\n    if (sites === null) return;\n    // Assemble list of sections based on query\n    const newSections: JSX.Element[] = [];\n    const newSelected: option<number> = query.length ? 0 : null;\n    let pos = 0,\n      matches = false;\n    Object.keys(sites).forEach((category, idx) => {\n      const links = sites[category];\n      const filtered = Object.keys(links).filter((name) =>\n        name.toLowerCase().includes(query),\n      );\n\n      if (filtered.length) {\n        matches = true;\n        newSections.push(\n          <Section key={idx} title={category}>\n            {filtered.map((name, idx) => {\n              const isSelected = pos++ === newSelected;\n              if (isSelected) setAction(links[name]);\n\n              return (\n                <a\n                  key={idx}\n                  href={links[name]}\n                  className={isSelected ? 'selected' : ''}\n                >\n                  {name}\n                </a>\n              );\n            })}\n          </Section>,\n        );\n      }\n    });\n    setTotalMatched(pos);\n    setSections(newSections);\n    setSelected(newSelected);\n    if (!matches || !query.length) setAction(null);\n  }, [sites, query, setAction]);\n\n  useEffect(() => {\n    function onKeyDown(e: KeyboardEvent) {\n      let newSelected = selected;\n      if (e.key === 'ArrowUp' || e.key === 'ArrowLeft') {\n        if (selected !== null && selected > 0) newSelected = selected - 1;\n      } else if (e.key === 'ArrowDown' || e.key === 'ArrowRight') {\n        if (selected !== null && selected < totalMatched)\n          newSelected = selected + 1;\n      }\n      if (newSelected === selected) return;\n      // update current sections to set new selected classname to selected\n      let pos = 0;\n      setSections(\n        sections.map((section, idx) => (\n          <Section key={idx} title={section.props.title}>\n            {'children' in section.props ? (\n              section.props.children.map((child: JSX.Element, idx: number) => {\n                const isSelected = pos++ === newSelected;\n                if (isSelected) setAction(child.props.href);\n\n                return (\n                  <a\n                    key={idx}\n                    href={child.props.href}\n                    className={isSelected ? 'selected' : ''}\n                  >\n                    {child.props.children}\n                  </a>\n                );\n              })\n            ) : (\n              <></>\n            )}\n          </Section>\n        )),\n      );\n      setSelected(newSelected);\n    }\n    document.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [setAction, selected, totalMatched, sections]);\n\n  return <div id={'links'}>{sections}</div>;\n}\n","import { useCallback, useEffect } from 'react';\nimport {\n  DEFAULT_SEARCH_URL,\n  DEFAULT_TAB_TITLE,\n  NOTE_TAB_PREFIX,\n  option,\n  SEARCH_TAB_PREFIX,\n} from './config';\n\nexport default function SearchBar({\n  text,\n  setText,\n  action,\n}: {\n  text: string;\n  setText: (s: string) => void;\n  action: option<string>;\n}) {\n  const updateTitle = useCallback(\n    (start: string) => {\n      if (text.length) document.title = `${start} - ${text}`;\n      else document.title = DEFAULT_TAB_TITLE;\n    },\n    [text],\n  );\n\n  useEffect(() => {\n    updateTitle(SEARCH_TAB_PREFIX);\n  }, [text, updateTitle]);\n\n  useEffect(() => {\n    const blurCallback = updateTitle.bind(null, NOTE_TAB_PREFIX),\n      focusCallback = updateTitle.bind(null, SEARCH_TAB_PREFIX);\n\n    window.addEventListener('blur', blurCallback);\n    window.addEventListener('focus', focusCallback);\n\n    return () => {\n      window.removeEventListener('blur', blurCallback);\n      window.removeEventListener('focus', focusCallback);\n    };\n  }, [updateTitle]);\n\n  return (\n    <form\n      id={'action'}\n      onSubmit={(e) => {\n        e.preventDefault();\n        // TODO - code to handle todo list commands\n        window.location.assign(\n          action !== null ? action : `${DEFAULT_SEARCH_URL}?q=${text}`,\n        );\n      }}\n    >\n      <input\n        type=\"text\"\n        value={text}\n        autoFocus\n        autoComplete={'off'}\n        onChange={(e) => setText(e.target.value)}\n      />\n    </form>\n  );\n}\n","export const PAGE_HUE_MIN = 10;\nexport const PAGE_HUE_MAX = 360;\n\nexport const DEFAULT_TAB_TITLE = '🏠 Home';\nexport const SEARCH_TAB_PREFIX = '🔍';\nexport const NOTE_TAB_PREFIX = '📝';\n\nexport const DEFAULT_SEARCH_URL = 'https://google.com/search';\n\nexport type option<T> = T | null;\nexport type json = { [k: string]: { [k: string]: string } };\n\n","import { useEffect, useState } from 'react';\n\nexport default function Clock() {\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  function to24hour(d: Date): string {\n    function pad(time: number) {\n      return time < 10 ? `0${time}` : time;\n    }\n\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\n  }\n\n  return <span id={'clock'}>{to24hour(date)}</span>;\n}\n","import Clock from './Clock';\n\nfunction StaticLinks() {\n  const links = ['Spotify', 'Slack', 'Steam'];\n\n  return (\n    <div id={'static-links'}>\n      <Clock />\n      {links.map((link, idx) => (\n        <a key={idx} href={link.toLowerCase() + ':'}>\n          {link}\n        </a>\n      ))}\n    </div>\n  );\n}\n\nexport default StaticLinks;\n","import { useState } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { option } from './config';\nimport LinkSections from './LinkSections';\nimport SearchBar from './SearchBar';\nimport StaticLinks from './StaticLinks';\n\nexport default function HomeSearch() {\n  const [query, setQuery] = useState('');\n  const [action, setAction] = useState<option<string>>(null);\n  const { height: spanHeight, ref } = useResizeDetector();\n\n  return (\n    //  We explicitly set the height of div#main so\n    //  the height transition is animated\n    <div id={'main'} style={{ height: spanHeight }}>\n      <span ref={ref} style={{ display: 'block' }}>\n        <StaticLinks />\n        <SearchBar text={query} setText={setQuery} action={action} />\n        <LinkSections query={query} setAction={setAction} />\n      </span>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport HomeSearch from './HomeSearch';\nimport { PAGE_HUE_MAX, PAGE_HUE_MIN } from './config';\n\nexport default function App() {\n  useEffect(() => {\n    function random(min: number, max: number): number {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    // Choose a random page color scheme on page load\n    document.documentElement.style.setProperty(\n      '--base',\n      `${random(PAGE_HUE_MIN, PAGE_HUE_MAX)}`,\n    );\n  }, []);\n\n  return <HomeSearch />;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}